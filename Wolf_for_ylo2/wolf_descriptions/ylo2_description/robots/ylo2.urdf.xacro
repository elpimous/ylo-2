<?xml version="1.0"?>

<robot name="ylo2" xmlns:xacro="http://www.ros.org/wiki/xacro">

     <!-- This argument allows us to load joint sensors that measure the internal wrenches -->
    <xacro:arg name="load_force_sensors" default="false"/>
    <xacro:arg name="task_period" default="0.004"/>
    <xacro:arg name="sensors" default="false"/>
    <xacro:arg name="floating_base_link" default="true"/>
    <xacro:arg name="robot_name"  default="ylo2"/>
    <xacro:arg name="base_name"   default="trunk"/>

    <!-- load generic materials -->
    <xacro:include filename="$(find wolf_description_utils)/urdfs/materials.xacro"/>

    <!-- generic simulator_gazebo plugins for starting mechanism control, ros time -->
    <xacro:include filename="$(find wolf_description_utils)/urdfs/gazebo.urdf.xacro"/>

    <!-- legs transmission and gazebo plugins -->
    <xacro:include filename="$(find wolf_description_utils)/urdfs/leg.transmission.xacro"/>
    <xacro:include filename="$(find wolf_description_utils)/urdfs/leg.gazebo.xacro"/>

    <!-- sensors -->
    <xacro:if value="$(arg sensors)">
        <xacro:include filename="$(find sensors_description)/urdfs/sensors/imu.gazebo.xacro"/>
    </xacro:if>

    <xacro:include filename="$(find ylo2_description)/urdfs/const.xacro"/>
    <xacro:include filename="$(find ylo2_description)/urdfs/leg.xacro"/>

    <!-- Rollover Protection mode will add an additional stick on the top, use "true" or "false" to switch it. -->
    <xacro:property name="rolloverProtection" value="false"/>

    <!-- Floating-base Joint -->
    <xacro:if value="$(arg floating_base_link)">
            <link name="world"/>
            <joint name="floating_base_joint" type="floating">
              <origin rpy="0 0 0" xyz="0 0 0"/>
              <parent link="world"/>
              <child link="trunk"/>
            </joint>
    </xacro:if>

    <link name="trunk">
        <visual>
            <origin rpy="0 0 0" xyz="${trunk_offset_x} 0 ${abab_motors_offset_z}"/>
            <geometry>
                <mesh filename="package://ylo2_description/meshes/body/textured/ylo2_textured_body.dae" scale="1 1 1"/>
            </geometry>
            <material name="grey"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="${trunk_offset_x} 0 ${abab_motors_offset_z}"/>
            <geometry>
                <mesh filename="package://ylo2_description/meshes/body/covers_collision.stl" scale="1 1 1"/>
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="${trunk_com_x} ${trunk_com_y} ${trunk_com_z}"/>
            <mass value="${trunk_mass}"/>
            <inertia
                ixx="${trunk_ixx}" ixy="${trunk_ixy}" ixz="${trunk_ixz}"
                iyy="${trunk_iyy}" iyz="${trunk_iyz}"
                izz="${trunk_izz}"/>  
        </inertial>
    </link>

    <link name="abad_motors">
        <visual>
            <origin rpy="0 0 0" xyz="${trunk_offset_x} ${trunk_offset_y} ${abab_motors_offset_z}"/>
            <geometry>
                <mesh filename="package://ylo2_description/meshes/body/textured/ylo2_textured_abad_motors.dae" scale="1 1 1"/>
            </geometry>
            <material name="white"/>
        </visual>
    </link>

    <joint name="abad_motors_joint" type="fixed">
        <parent link="trunk"/>
        <child link="abad_motors"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>

    <link name="battery">
        <visual>
            <origin rpy="0 0 0" xyz="${trunk_offset_x} ${trunk_offset_y} ${abab_motors_offset_z}"/>
            <geometry>
                <mesh filename="package://ylo2_description/meshes/body/battery.stl" scale="1 1 1"/>
            </geometry>
            <material name="blue"/>
        </visual>
    </link>

    <joint name="battery_joint" type="fixed">
        <parent link="trunk"/>
        <child link="battery"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>

    <link name="covers">
        <visual>
            <origin rpy="0 0 0" xyz="${trunk_offset_x} ${trunk_offset_y} ${abab_motors_offset_z}"/>
            <geometry>
                <mesh filename="package://ylo2_description/meshes/body/textured/ylo2_textured_cover.dae" scale="1 1 1"/>
            </geometry>
            <material name="orange"/>
        </visual>
    </link>

    <joint name="covers_joint" type="fixed">
        <parent link="trunk"/>
        <child link="covers"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>

    <link name="accessories">
        <visual>
            <origin rpy="0 0 0" xyz="${trunk_offset_x} ${trunk_offset_y} ${abab_motors_offset_z}"/>
            <geometry>
                <mesh filename="package://ylo2_description/meshes/body/textured/accessories.dae" scale="1 1 1"/>
            </geometry>
            <material name="blue"/>
        </visual>
    </link>

    <joint name="accessories_joint" type="fixed">
        <parent link="trunk"/>
        <child link="accessories"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>

    <link name="D435">
        <visual>
            <origin rpy="0 0 0" xyz="${trunk_offset_x} ${trunk_offset_y+0.004} ${abab_motors_offset_z}"/>
            <geometry>
                <mesh filename="package://ylo2_description/meshes/body/textured/ylo2_d435_textured.dae" scale="1 1 1"/>
            </geometry>
            <material name="black"/>
        </visual>
    </link>

    <joint name="D435_joint" type="fixed">
        <parent link="trunk"/>
        <child link="D435"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>

    <link name="T265">
        <visual>
            <origin rpy="0 0 0" xyz="${trunk_offset_x+0.001} ${trunk_offset_y+0.0025} ${abab_motors_offset_z+0.00}"/>
            <geometry>
                <mesh filename="package://ylo2_description/meshes/body/textured/ylo2_t265_textured.dae" scale="1 1.06 1.04"/>
            </geometry>
            <material name="black"/>
        </visual>
    </link>

    <joint name="T265_joint" type="fixed">
        <parent link="trunk"/>
        <child link="T265"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>


    <!-- adding a lateral cylinder as collision object, to avoid robot to fall on it side-->
    <xacro:if value="${(rolloverProtection == 'true')}">
        <joint name="stick_joint" type="fixed">
            <parent link="trunk"/>
            <child link="stick_link"/>
            <origin rpy="0 0 0" xyz="${0.18} 0 ${stick_length/2.0+0.08}"/>
        </joint>

        <link name="stick_link">
            <visual>
                <geometry>
                    <cylinder length="${stick_length}" radius="${stick_radius}"/>
                </geometry>
                <origin rpy="0 0 0" xyz="0 0 0"/>
                <material name="white"/>
            </visual>
            <collision>
                <geometry>
                    <cylinder length="${stick_length}" radius="${stick_radius}"/>
                </geometry>
                <origin rpy="0 0 0" xyz="0 0 0"/>
            </collision>
            <inertial>
                <mass value="${stick_mass}"/>
                <inertia
                    ixx="${stick_mass / 2.0 * (stick_radius*stick_radius)}" ixy="0.0" ixz="0.0"
                    iyy="${stick_mass / 12.0 * (3*stick_radius*stick_radius + stick_length*stick_length)}" iyz="0.0"
                    izz="${stick_mass / 12.0 * (3*stick_radius*stick_radius + stick_length*stick_length)}"/>                   
            </inertial>
        </link>
    </xacro:if> 

    <joint name="imu_joint" type="fixed">
        <parent link="trunk"/>
        <child link="trunk_imu"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>

    <link name="trunk_imu">
        <inertial>
            <mass value="0.001"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
        </inertial>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.001 0.001 0.001"/>
            </geometry>
            <material name="red"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size=".001 .001 .001"/>
            </geometry>
        </collision>
    </link>

    <!-- ABAD POSITION OK pas touche-->
    <xacro:leg name="rf" mirror="-1" mirror_dae= "False" front_hind="1" front_hind_dae="True">
        <origin rpy="0 0 0" xyz="${leg_offset_x-0.019} ${0-leg_offset_y+0.006} ${0-leg_offset_z}"/>
    </xacro:leg>

    <xacro:leg name="lf" mirror="1" mirror_dae="True" front_hind="1" front_hind_dae="True">
        <origin rpy="0 0 0" xyz="${leg_offset_x-0.019} ${0+leg_offset_y+0.006} ${0-leg_offset_z}"/>
    </xacro:leg>

    <xacro:leg name="rh" mirror="-1" mirror_dae="False" front_hind="-1" front_hind_dae="False">
        <origin rpy="0 0 0" xyz="${-leg_offset_x-0.019} ${0-leg_offset_y+0.006} ${0-leg_offset_z}"/>
    </xacro:leg>

    <xacro:leg name="lh" mirror="1" mirror_dae="True" front_hind="-1" front_hind_dae="False">
        <origin rpy="0 0 0" xyz="${-leg_offset_x-0.019} ${0+leg_offset_y+0.006} ${0-leg_offset_z}"/>
    </xacro:leg>

    <!-- <xacro:stairs stairs="15" xpos="0" ypos="2.0" zpos="0" /> -->

    <!-- Extensions -->
    <xacro:leg_transmission prefix="rf"/>
    <xacro:leg_gazebo prefix="rf" robot_name="$(arg robot_name)" load_force_sensors="$(arg load_force_sensors)"/>
    <xacro:leg_transmission prefix="lf"/>
    <xacro:leg_gazebo prefix="lf" robot_name="$(arg robot_name)" load_force_sensors="$(arg load_force_sensors)"/>
    <xacro:leg_transmission prefix="rh"/>
    <xacro:leg_gazebo prefix="rh" robot_name="$(arg robot_name)" load_force_sensors="$(arg load_force_sensors)"/>
    <xacro:leg_transmission prefix="lh"/>
    <xacro:leg_gazebo prefix="lh" robot_name="$(arg robot_name)" load_force_sensors="$(arg load_force_sensors)"/>

    <xacro:if value="$(arg sensors)">
            <xacro:imu_sensor
                imu_name="trunk_imu"
                imu_topic="trunk_imu/data"
                update_rate="${1.0 / $(arg task_period)}"
                rate_mean="0"
                rate_stddev="0"
                rate_bias_mean="0"
                rate_bias_stddev="0"
                accel_mean="0"
                accel_stddev="0"
                accel_bias_mean="0"
                accel_bias_stddev="0">
            </xacro:imu_sensor>
    </xacro:if>

</robot>
