wolf_controller:
  type: wolf_controller/Controller
  default_duty_factor: 0.3 # 0.3 ratio between the stance and total cycle time: T_stance / T_cycle
  default_swing_frequency: 4.2 # 4.2 frequency of the swing: 1 / T_swing
  default_contact_threshold: 4.0 # 4.0 orce magnitude that is used to detect if the robot is contact with the enviroment
  default_step_reflex_contact_threshold: 12.0 # 2.0 magnitude of the contact force that triggers a step reflex
  
  default_base_linear_velocity_x: 0.6
  default_base_linear_velocity_y: 0.3
  default_base_linear_velocity_z: 0.3
  
  default_base_angular_velocity_roll: 0.3 
  default_base_angular_velocity_pitch: 0.3
  default_base_angular_velocity_yaw: 0.5
  
  default_step_height: 0.04             # 0.065 
  default_step_length: 0.20
  
  max_step_height: 0.15                # 0.15 
  max_step_length: 0.35                 # 0.4  
  
  max_base_height: 0.35                 # 0.4
  
  max_base_roll: 0.5                    # 0.523
  min_base_roll: -0.5                   # -0.523  
    
  max_base_pitch: 0.5                   # 0.523 
  min_base_pitch: -0.5                  # -0.523 

  activate_step_reflex: true
  activate_push_recovery: true
  
  estimation_position_type: estimated_z # simu only
  estimation_orientation_type: imu_magnetometer # simu only
  
  initial_pose_simulation: {x: 0.0, y: 0.0, z: 0.25, roll: 0.0, pitch: 0.0, yaw: 0.0}

  push_recovery:
      k: {x: 0.5, y: 10.0, r: 0.01}
      dynamic_th: {x: 1.0, y: 4.0, r: 0.5}
      static_th: {x: 0.06, y: 0.6, r: 0.06}

  gains:
  
      # impedance gains for the joints in each leg. These gains are in two istances: to zero the joints during the init phase and in case of anomaly to perform a controlled shutdown (in this istance, only the damping is used)
      
      Kp_leg: {haa: 1.0, hfe: 1.0, kfe: 1.0}
      Kd_leg: {haa: 0.005, hfe: 0.005, kfe: 0.0005}

      lf_foot:
          # default the tasks' gains are defined as force gains meaning that Kp and Kd work as Cartesian impedance gains
          Kp: {x: 1000.0, y: 1000.0, z: 1000.0, roll: 0, pitch: 0, yaw: 0}
          Kd: {x: 35.0, y: 35.0, z: 100.0, roll: 0, pitch: 0, yaw: 0}
          # relative task weight compared to the other tasks. A higher value means that the selected task has a higher priority and therefore the solver will try to minimize this task first
          weight: 100.0
      rf_foot:
          Kp: {x: 1000.0, y: 1000.0, z: 1000.0, roll: 0, pitch: 0, yaw: 0}
          Kd: {x: 35.0, y: 35.0, z: 100.0, roll: 0, pitch: 0, yaw: 0}
          weight: 100.0
      rh_foot:
          Kp: {x: 1000.0, y: 1000.0, z: 1000.0, roll: 0, pitch: 0, yaw: 0}
          Kd: {x: 35.0, y: 35.0, z: 100.0, roll: 0, pitch: 0, yaw: 0}
          weight: 100.0
      lh_foot:
          Kp: {x: 1000.0, y: 1000.0, z: 1000.0, roll: 0, pitch: 0, yaw: 0}
          Kd: {x: 35.0, y: 35.0, z: 100.0, roll: 0, pitch: 0, yaw: 0}
          weight: 100.0

      waistRPY:
          Kp: {x: 0.0, y: 0.0, z: 0.0, roll: 50.0, pitch: 50.0, yaw: 50.0}
          Kd: {x: 0.0, y: 0.0, z: 0.0, roll: 5.0, pitch: 5.0, yaw: 5.0}
          weight: 1.0

      CoM:
          Kp: {x: 30.0, y: 30.0, z: 30.0}
          Kd: {x: 3.0, y: 3.0, z: 3.0}
          weight: 1.0

      angular_momentum:
          weight: 0.1
